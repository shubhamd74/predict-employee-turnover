# -*- coding: utf-8 -*-
"""main_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15O3_OEIZcCJJNarMlLGYGJjvBdzeYyx5
"""

import numpy as np
import pickle
import pandas as pd
import streamlit as st 
from PIL import Image

pickle_in = open("classifier.pkl","rb")
classifier=pickle.load(pickle_in)

def predict_turnover(input_data):
    df = pd.DataFrame(input_data, columns = ['satisfaction_level','last_evaluation','number_project','average_montly_hours','time_spend_company','Work_accident','promotion_last_5years','department','salary'])
    prediction=classifier.predict(df)
    
    if prediction == 0:
        return "Employee won't leave company"
    return "Employee may leave the company soon"

def department_val(option):
    if option == 'IT':
        return 0
    elif option == 'R&D':
        return 1
    elif option == 'accounting':
        return 2
    elif option == 'hr':
        return 3
    elif option == 'management':
        return 4
    elif option == 'marketing':
        return 5
    elif option == 'product_mng':
        return 6
    elif option == 'sales':
        return 7
    elif option == 'support':
        return 8
    elif option == 'technical':
        return 9

def salary_val(option1):
    if option1 == 'High':
        return 0
    elif option1 == 'Low':
        return 1
    if option1 == 'Medium':
        return 2

def main():
    st.title("Predict Employee Turnover")
    page_bg_img = '''
    <style>
    body {
    background-image: url("https://www.google.com/search?q=company+employee+background+image+&tbm=isch&ved=2ahUKEwja6NeQr4L5AhXqoNgFHQpyBskQ2-cCegQIABAA&oq=company+employee+background+image+&gs_lcp=CgNpbWcQAzIECCMQJ1C1AljHEGCvGmgAcAB4AIABywKIAf4TkgEIMC4xMS4xLjGYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ&sclient=img&ei=iUjVYpqAJurB4t4PiuSZyAw&bih=754&biw=1536#imgrc=DvUYCog4S0rUjM");
    background-size: cover;
    }
    </style>
    '''

    st.markdown(page_bg_img, unsafe_allow_html=True)
    html_temp = """
    <div style="background-color:tomato;padding:10px">
    <h2 style="color:white;text-align:center;"> Predict Employee Turnover Web APP </h2>
    </div>
    """
    list=[]
    st.markdown(html_temp,unsafe_allow_html=True)
    if st.button("About this ML Project"):
       
        st.markdown('Employee turnover prediction web app is machine learning based classification model' 
        ' which helps to determine turnover of employees for the organization. '
        ' It will help companies to know about employee turnover in advance to '
        ' provide them sufficient time to take necessary decisions.')
    
    input1 = st.slider('Satisfaction level', 0.0, 1.0, 0.25)
    input2 = st.slider('Last Evaluation Rating', 0.0, 1.0, 0.25)
    input3 = st.slider('Number of Projects', 0, 10, 1)
    input4 = st.slider('Monthly Working Hours', 0, 300, 25)
    input5 = st.slider('Time Spent in Company', 0, 20, 2)
    input6 = st.number_input("work accident",0,1)
    input7 = st.number_input("Promotion from last 5 years",0,1)
    

    
    option = st.selectbox(
     'Select Department',
     ('sales', 'accounting', 'hr', 'technical', 'support', 'management', 'IT',
     'product_mng', 'marketing', 'R&D'))
    option1 = st.selectbox(
      'Salary Range',
      ('Low', 'Medium', 'High'))
     
    input8 = department_val(option)
    input9 = salary_val(option1)
   
    
    inputs = []
    inputs.append(input1)
    inputs.append(input2)
    inputs.append(input3)
    inputs.append(input4)
    inputs.append(input5)
    inputs.append(input6)
    inputs.append(input7)
    inputs.append(int(input8))
    inputs.append(input9)
    inputs = np.array(inputs)
    inputs = inputs.reshape(1,-1)
    result=""
    if st.button("Predict"):
        result=predict_turnover(inputs)
    st.success('The output is {}'.format(result))
    if st.button("About"):
        st.markdown("Connect wtih me: [LINK](https://www.linkedin.com/in/shubham-deshmukh-b8a7691b0/)")
        #st.text("Connect With Me: https://www.linkedin.com/in/shubham-deshmukh-b8a7691b0/")
        

if __name__=='__main__':
    main()